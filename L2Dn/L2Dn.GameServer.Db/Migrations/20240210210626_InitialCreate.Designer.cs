// <auto-generated />
using System;
using L2Dn.GameServer.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace L2Dn.GameServer.Db.Migrations
{
    [DbContext(typeof(GameServerDbContext))]
    [Migration("20240210210626_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("L2Dn.GameServer.Db.AccountRef", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("LastIpAddress")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("AccountRefs");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.Ally", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CrestId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.HasKey("Id");

                    b.HasIndex("CrestId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Allys");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessLevel")
                        .HasColumnType("integer");

                    b.Property<int>("AccountId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ClanCreateExpiryTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ClanId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ClanJoinExpiryTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ClanPrivileges")
                        .HasColumnType("integer");

                    b.Property<short>("Class")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CurrentCp")
                        .HasColumnType("integer");

                    b.Property<int>("CurrentHp")
                        .HasColumnType("integer");

                    b.Property<int>("CurrentMp")
                        .HasColumnType("integer");

                    b.Property<int>("Deaths")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("Exp")
                        .HasColumnType("bigint");

                    b.Property<long>("ExpBeforeDeath")
                        .HasColumnType("bigint");

                    b.Property<byte>("Face")
                        .HasColumnType("smallint");

                    b.Property<int>("Fame")
                        .HasColumnType("integer");

                    b.Property<byte>("HairColor")
                        .HasColumnType("smallint");

                    b.Property<byte>("HairStyle")
                        .HasColumnType("smallint");

                    b.Property<int>("Heading")
                        .HasColumnType("integer");

                    b.Property<int>("Kills")
                        .HasColumnType("integer");

                    b.Property<string>("Language")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<byte>("Level")
                        .HasColumnType("smallint");

                    b.Property<byte>("LevelJoinedAcademy")
                        .HasColumnType("smallint");

                    b.Property<int>("MaxCp")
                        .HasColumnType("integer");

                    b.Property<int>("MaxHp")
                        .HasColumnType("integer");

                    b.Property<int>("MaxMp")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.Property<int>("NameColor")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("OnlineTime")
                        .HasColumnType("interval");

                    b.Property<int>("PcCafePoints")
                        .HasColumnType("integer");

                    b.Property<int>("PkKills")
                        .HasColumnType("integer");

                    b.Property<int>("PvpKills")
                        .HasColumnType("integer");

                    b.Property<int>("RaidBossPoints")
                        .HasColumnType("integer");

                    b.Property<int>("Reputation")
                        .HasColumnType("integer");

                    b.Property<byte>("Sex")
                        .HasColumnType("smallint");

                    b.Property<byte>("SlotIndex")
                        .HasColumnType("smallint");

                    b.Property<long>("Sp")
                        .HasColumnType("bigint");

                    b.Property<int?>("SponsorId")
                        .HasColumnType("integer");

                    b.Property<int>("SubPledge")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<int>("TitleColor")
                        .HasColumnType("integer");

                    b.Property<int?>("TransformId")
                        .HasColumnType("integer");

                    b.Property<int>("VitalityPoints")
                        .HasColumnType("integer");

                    b.Property<int>("X")
                        .HasColumnType("integer");

                    b.Property<int>("Y")
                        .HasColumnType("integer");

                    b.Property<int>("Z")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("ClanId");

                    b.HasIndex("Created");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("SponsorId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.Clan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AllyId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("AllyPenaltyExpireTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<byte>("AllyPenaltyExpireType")
                        .HasColumnType("smallint");

                    b.Property<int?>("Castle")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CharPenaltyExpireTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CrestId")
                        .HasColumnType("integer");

                    b.Property<int?>("LargeCrestId")
                        .HasColumnType("integer");

                    b.Property<int>("LeaderId")
                        .HasColumnType("integer");

                    b.Property<byte>("Level")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.Property<int>("Reputation")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AllyId");

                    b.HasIndex("CrestId");

                    b.HasIndex("LargeCrestId");

                    b.HasIndex("LeaderId")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Clans");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.Crest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasMaxLength(2176)
                        .HasColumnType("bytea");

                    b.Property<byte>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Crests");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.Ally", b =>
                {
                    b.HasOne("L2Dn.GameServer.Db.Crest", "Crest")
                        .WithMany()
                        .HasForeignKey("CrestId");

                    b.Navigation("Crest");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.Character", b =>
                {
                    b.HasOne("L2Dn.GameServer.Db.AccountRef", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("L2Dn.GameServer.Db.Clan", "Clan")
                        .WithMany()
                        .HasForeignKey("ClanId");

                    b.HasOne("L2Dn.GameServer.Db.Character", "Sponsor")
                        .WithMany()
                        .HasForeignKey("SponsorId");

                    b.Navigation("Account");

                    b.Navigation("Clan");

                    b.Navigation("Sponsor");
                });

            modelBuilder.Entity("L2Dn.GameServer.Db.Clan", b =>
                {
                    b.HasOne("L2Dn.GameServer.Db.Ally", "Ally")
                        .WithMany()
                        .HasForeignKey("AllyId");

                    b.HasOne("L2Dn.GameServer.Db.Crest", "Crest")
                        .WithMany()
                        .HasForeignKey("CrestId");

                    b.HasOne("L2Dn.GameServer.Db.Crest", "LargeCrest")
                        .WithMany()
                        .HasForeignKey("LargeCrestId");

                    b.HasOne("L2Dn.GameServer.Db.Character", "Leader")
                        .WithMany()
                        .HasForeignKey("LeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ally");

                    b.Navigation("Crest");

                    b.Navigation("LargeCrest");

                    b.Navigation("Leader");
                });
#pragma warning restore 612, 618
        }
    }
}
